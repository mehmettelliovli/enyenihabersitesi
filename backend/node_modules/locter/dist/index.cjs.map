{"version":3,"file":"index.cjs","sources":["../src/utils/has-property.ts","../src/utils/object.ts","../src/utils/error.ts","../src/utils/file-name.ts","../src/utils/to-array.ts","../src/utils/file-path.ts","../src/utils/runtime.ts","../src/utils/typescript.ts","../src/locator/utils.ts","../src/locator/async.ts","../src/locator/sync.ts","../src/loader/built-in/conf/module.ts","../src/loader/built-in/module/utils.ts","../src/loader/built-in/module/module.ts","../src/loader/built-in/json/module.ts","../src/loader/built-in/yaml/module.ts","../src/loader/constants.ts","../src/loader/module.ts","../src/loader/singleton.ts","../src/loader/helpers.ts"],"sourcesContent":["export function hasOwnProperty<X extends Record<string, any>, Y extends PropertyKey>(obj: X, prop: Y): obj is X & Record<Y, unknown> {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nexport function hasStringProperty<X extends Record<string, any>, Y extends PropertyKey>(obj: X, prop: Y): obj is X & Record<Y, string> {\n    return hasOwnProperty(obj, prop) && typeof obj[prop] === 'string';\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nexport function isObject(item: unknown) : item is Record<string, any> {\n    return (\n        !!item &&\n        typeof item === 'object' &&\n        !Array.isArray(item)\n    );\n}\n\nexport function isSafeObjectKey(key: string) : boolean {\n    return key !== '__proto__' &&\n        key !== 'prototype' &&\n        key !== 'constructor';\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport { hasOwnProperty } from './has-property';\nimport { isObject } from './object';\n\nexport function handleException(e: unknown) : void {\n    if (e instanceof Error) {\n        throw e;\n    }\n\n    const error = new Error('Can not process thrown exception.');\n\n    if (isObject(e)) {\n        if (\n            hasOwnProperty(e, 'message') &&\n            typeof e.message === 'string'\n        ) {\n            error.message = e.message;\n        }\n\n        if (\n            hasOwnProperty(e, 'stack') &&\n            typeof e.stack === 'string'\n        ) {\n            error.stack = e.stack;\n        }\n    }\n\n    throw error;\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport path from 'node:path';\n\nexport function getFileNameExtension(\n    input: string,\n    allowed?: string[],\n) : string | undefined {\n    const extension = path.extname(input);\n    if (extension === '' || extension === '.') {\n        return undefined;\n    }\n\n    if (\n        typeof allowed === 'undefined' ||\n        allowed.indexOf(extension) !== -1\n    ) {\n        return extension;\n    }\n\n    return undefined;\n}\n\nexport function removeFileNameExtension(\n    input: string,\n    extensions?: string[],\n) {\n    const extension = getFileNameExtension(input, extensions);\n    if (extension) {\n        return input.substring(0, input.length - extension.length);\n    }\n\n    return input;\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nexport function toArray(input: string | string[]) : string[] {\n    return Array.isArray(input) ? input : [input];\n}\n","/*\n * Copyright (c) 2023.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\nimport path from 'node:path';\n\nexport function isFilePath(input: string) {\n    const extension = path.extname(input);\n    return extension && extension !== '';\n}\n","/*\n * Copyright (c) 2024.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nexport function isJestRuntimeEnvironment() : boolean {\n    return process.env &&\n        process.env.JEST_WORKER_ID !== undefined;\n}\n\nexport function isTsNodeRuntimeEnvironment(): boolean {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    return !!process[Symbol.for('ts-node.register.instance')];\n}\n","/*\n * Copyright (c) 2024.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport { isObject } from './object';\n\nexport function isTypeScriptError(input: unknown) : input is Error {\n    if (!isObject(input)) {\n        return false;\n    }\n\n    if (typeof input.diagnosticCodes !== 'undefined') {\n        return true;\n    }\n\n    return typeof input.message === 'string' &&\n        /TS\\d+/.test(input.message);\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport path from 'node:path';\nimport { isObject, toArray } from '../utils';\nimport type { LocatorInfo, LocatorOptions, LocatorOptionsInput } from './types';\n\nexport function buildLocatorPatterns(pattern: string | string[]) : string[] {\n    return Array.isArray(pattern) ?\n        pattern :\n        [pattern];\n}\n\nexport function buildLocatorOptions(options: LocatorOptionsInput = {}) : LocatorOptions {\n    const paths = options.path ?\n        toArray(options.path) :\n        [];\n\n    const ignore = options.ignore ?\n        toArray(options.ignore) :\n        [];\n\n    if (paths.length === 0) {\n        paths.push(process.cwd());\n    }\n\n    let onlyFiles : boolean;\n    let onlyDirectories : boolean;\n\n    if (options.onlyDirectories === options.onlyFiles) {\n        onlyDirectories = false;\n        onlyFiles = !options.onlyDirectories;\n    } else if (typeof options.onlyFiles === 'undefined') {\n        onlyDirectories = options.onlyDirectories ?? false;\n        onlyFiles = !options.onlyDirectories;\n    } else {\n        onlyFiles = options.onlyFiles ?? true;\n        onlyDirectories = !options.onlyFiles;\n    }\n\n    return {\n        path: paths,\n        ignore,\n        onlyDirectories,\n        onlyFiles,\n    };\n}\n\nexport function pathToLocatorInfo(\n    input: string,\n    skipResolve?: boolean,\n) : LocatorInfo {\n    if (\n        !skipResolve &&\n        !path.isAbsolute(input)\n    ) {\n        input = path.resolve(process.cwd(), input);\n    }\n\n    const info = path.parse(input);\n\n    return {\n        path: info.dir.split('/').join(path.sep),\n        name: info.name,\n        extension: info.ext ?\n            info.ext :\n            undefined,\n    };\n}\n\nexport function isLocatorInfo(\n    input: unknown,\n) : input is LocatorInfo {\n    return isObject(input) &&\n        typeof input.path === 'string' &&\n        typeof input.name === 'string' &&\n        typeof input.extension === 'string';\n}\n\nexport function buildFilePath(input: LocatorInfo | string) {\n    if (typeof input === 'string') {\n        return input;\n    }\n\n    if (input.extension) {\n        return path.join(input.path, input.name) + input.extension;\n    }\n\n    return path.join(input.path, input.name);\n}\n\nexport function buildFilePathWithoutExtension(input: LocatorInfo | string) {\n    let info: LocatorInfo;\n\n    if (typeof input === 'string') {\n        info = pathToLocatorInfo(input);\n    } else {\n        info = input;\n    }\n\n    return path.join(info.path, info.name);\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport fg from 'fast-glob';\nimport type { LocatorInfo, LocatorOptionsInput } from './types';\nimport { buildLocatorOptions, buildLocatorPatterns, pathToLocatorInfo } from './utils';\n\nexport async function locateMany(\n    pattern: string | string[],\n    options?: LocatorOptionsInput,\n) : Promise<LocatorInfo[]> {\n    const patterns = buildLocatorPatterns(pattern);\n    const opts = buildLocatorOptions(options);\n\n    const items : LocatorInfo[] = [];\n\n    for (let i = 0; i < patterns.length; i++) {\n        for (let j = 0; j < opts.path.length; j++) {\n            const files = await fg(patterns[i], {\n                absolute: true,\n                cwd: opts.path[j],\n                ignore: opts.ignore,\n                onlyFiles: opts.onlyFiles,\n                onlyDirectories: opts.onlyDirectories,\n            });\n\n            for (let k = 0; k < files.length; k++) {\n                items.push(pathToLocatorInfo(files[k], true));\n            }\n        }\n    }\n\n    return items;\n}\n\nexport async function locate(\n    pattern: string | string[],\n    options?: LocatorOptionsInput,\n) : Promise<LocatorInfo | undefined> {\n    const patterns = buildLocatorPatterns(pattern);\n    const opts = buildLocatorOptions(options);\n\n    for (let i = 0; i < patterns.length; i++) {\n        for (let j = 0; j < opts.path.length; j++) {\n            const files = await fg(patterns[i], {\n                absolute: true,\n                cwd: opts.path[j],\n                ignore: opts.ignore,\n                onlyFiles: opts.onlyFiles,\n                onlyDirectories: opts.onlyDirectories,\n            });\n\n            const element = files.shift();\n            if (element) {\n                return pathToLocatorInfo(element, true);\n            }\n        }\n    }\n\n    return undefined;\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport fg from 'fast-glob';\nimport type { LocatorInfo, LocatorOptionsInput } from './types';\nimport { buildLocatorOptions, buildLocatorPatterns, pathToLocatorInfo } from './utils';\n\nexport function locateManySync(\n    pattern: string | string[],\n    options?: LocatorOptionsInput,\n) : LocatorInfo[] {\n    const patterns = buildLocatorPatterns(pattern);\n    const opts = buildLocatorOptions(options);\n\n    const items : LocatorInfo[] = [];\n\n    for (let i = 0; i < patterns.length; i++) {\n        for (let j = 0; j < opts.path.length; j++) {\n            const files = fg.sync(patterns[i], {\n                absolute: true,\n                cwd: opts.path[j],\n                ignore: opts.ignore,\n                onlyFiles: opts.onlyFiles,\n                onlyDirectories: opts.onlyDirectories,\n            });\n\n            for (let k = 0; k < files.length; k++) {\n                items.push(pathToLocatorInfo(files[k], true));\n            }\n        }\n    }\n\n    return items;\n}\n\nexport function locateSync(\n    pattern: string | string[],\n    options?: LocatorOptionsInput,\n) : LocatorInfo | undefined {\n    const patterns = buildLocatorPatterns(pattern);\n    const opts = buildLocatorOptions(options);\n\n    for (let i = 0; i < patterns.length; i++) {\n        for (let j = 0; j < opts.path.length; j++) {\n            const files = fg.sync(patterns[i] as string, {\n                absolute: true,\n                cwd: opts.path[j],\n                ignore: opts.ignore,\n                onlyFiles: opts.onlyFiles,\n                onlyDirectories: opts.onlyDirectories,\n            });\n\n            const element = files.shift();\n            if (element) {\n                return pathToLocatorInfo(element, true);\n            }\n        }\n    }\n\n    return undefined;\n}\n","/*\n * Copyright (c) 2022-2023.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\n// Based on https://github.com/unjs/rc9 (MIT)\n\nimport { destr } from 'destr';\nimport flat from 'flat';\nimport fs from 'node:fs';\nimport { buildFilePath } from '../../../locator';\nimport { handleException, isSafeObjectKey } from '../../../utils';\nimport type { Loader } from '../../type';\n\nexport class ConfLoader implements Loader {\n    async execute(input: string) {\n        const filePath = buildFilePath(input);\n\n        try {\n            const file = await fs.promises.readFile(filePath, { encoding: 'utf-8' });\n\n            return this.parse(file);\n        } catch (e) {\n            return handleException(e);\n        }\n    }\n\n    executeSync(input: string) {\n        const filePath = buildFilePath(input);\n\n        try {\n            const file = fs.readFileSync(filePath, { encoding: 'utf-8' });\n\n            return this.parse(file);\n        } catch (e) {\n            return handleException(e);\n        }\n    }\n\n    parse(contents: string): Record<string, any> {\n        const config: Record<string, any> = {};\n\n        const lines = contents.split(/\\n|\\r|\\r\\n/);\n\n        for (let i = 0; i < lines.length; i++) {\n            const match = lines[i].match(/^\\s*([^\\s=]+)\\s*=\\s*(.*)?\\s*$/);\n            if (!match) {\n                continue;\n            }\n\n            // Key\n            const key = match[1];\n\n            if (!key || !isSafeObjectKey(key)) {\n                continue;\n            }\n\n            const value = destr(match[2].trim() /* val */);\n\n            if (key.endsWith('[]')) {\n                const arrKey = key.slice(0, Math.max(0, key.length - 2));\n                config[arrKey] = (config[arrKey] || []).concat(value);\n                continue;\n            }\n\n            config[key] = value;\n        }\n\n        return flat.unflatten(config, { overwrite: true });\n    }\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport { hasOwnProperty, isObject } from '../../../utils';\nimport type { LoaderFilterFn, ModuleExport } from './type';\n\ntype ESModule = { [key: string]: any, __esModule: boolean };\nexport function isESModule(input: unknown) : input is ESModule {\n    return isObject(input) &&\n        // eslint-disable-next-line no-underscore-dangle\n        typeof input.__esModule !== 'undefined';\n}\n\n// https://2ality.com/2017/01/babel-esm-spec-mode.html\nexport function toModuleRecord(\n    data: unknown,\n) {\n    if (isESModule(data)) {\n        // @see https://github.com/testing-library/user-event/issues/813\n        // @see https://stackoverflow.com/questions/62717394/export-default-class-exports-double-nested-default\n        if (\n            isESModule(data.default) &&\n            data.default.default\n        ) {\n            return {\n                ...data,\n                default: data.default.default,\n            };\n        }\n\n        return data;\n    }\n\n    const output = Object.create(null, {\n        __esModule: {\n            value: true,\n        },\n        [Symbol.toStringTag]: {\n            value: 'Module',\n        },\n    });\n\n    if (isObject(data)) {\n        // eslint-disable-next-line no-restricted-syntax\n        for (const key in data) {\n            if (hasOwnProperty(output, key)) {\n                continue;\n            }\n\n            let descriptor = Object.getOwnPropertyDescriptor(data, key);\n            if (\n                !descriptor ||\n                ('get' in descriptor || descriptor.writable || descriptor.configurable)\n            ) {\n                descriptor = {\n                    enumerable: true,\n                    get() {\n                        return data[key];\n                    },\n                };\n            }\n\n            Object.defineProperty(output, key, descriptor);\n        }\n    }\n\n    if (!hasOwnProperty(output, 'default')) {\n        Object.defineProperty(output, 'default', {\n            value: data,\n            enumerable: true,\n        });\n    }\n\n    return Object.freeze(output);\n}\n\nexport function getModuleExport(\n    data: Record<string, any>,\n    filterFn: LoaderFilterFn,\n): ModuleExport | undefined {\n    const keys = Object.keys(data);\n    for (let i = 0; i < keys.length; i++) {\n        if (filterFn(keys[i] as string, data[keys[i] as string])) {\n            return {\n                key: keys[i] as string,\n                value: data[keys[i] as string],\n            };\n        }\n    }\n\n    return undefined;\n}\n","/*\n * Copyright (c) 2023.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport { BaseError } from 'ebec';\nimport { createJiti } from 'jiti';\nimport { pathToFileURL } from 'node:url';\nimport type { LocatorInfo } from '../../../locator';\nimport {\n    buildFilePath,\n    isLocatorInfo,\n} from '../../../locator';\nimport {\n    handleException,\n    hasStringProperty,\n    isFilePath, isJestRuntimeEnvironment,\n    isObject,\n    isTsNodeRuntimeEnvironment,\n    isTypeScriptError,\n} from '../../../utils';\nimport type { Loader } from '../../type';\nimport type { ModuleLoadOptions } from './type';\nimport { toModuleRecord } from './utils';\n\ntype Jiti = ReturnType<typeof createJiti>;\n\nexport class ModuleLoader implements Loader {\n    protected instance : Jiti;\n\n    constructor() {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        this.instance = createJiti(undefined, {\n            extensions: ['.js', '.mjs', '.mts', '.cjs', '.cts', '.ts'],\n        });\n    }\n\n    async execute(input: string) {\n        let output : any;\n\n        try {\n            output = await this.load(input);\n        } catch (e) {\n            if (\n                e instanceof SyntaxError ||\n                e instanceof ReferenceError ||\n                isTypeScriptError(e)\n            ) {\n                throw e;\n            }\n\n            // jiti + ts-node\n            // issue: https://github.com/nuxt/bridge/issues/228\n            if (isTsNodeRuntimeEnvironment()) {\n                output = this.loadSync(input);\n            } else {\n                output = this.instance(input);\n            }\n        }\n\n        return toModuleRecord(output);\n    }\n\n    executeSync(input: string) {\n        let output : any;\n\n        try {\n            output = this.loadSync(input);\n        } catch (e) {\n            if (\n                e instanceof SyntaxError ||\n                e instanceof ReferenceError ||\n                isTypeScriptError(e)\n            ) {\n                throw e;\n            }\n\n            output = this.instance(input);\n        }\n\n        return toModuleRecord(output);\n    }\n\n    // ---------------------------------------------------------------------------\n\n    async load(\n        data: LocatorInfo | string,\n        options: ModuleLoadOptions = {},\n    ) : Promise<unknown> {\n        const id = this.build(data, options);\n\n        try {\n            // segmentation fault\n            // issue: https://github.com/nodejs/node/issues/35889\n            if (isJestRuntimeEnvironment()) {\n                // eslint-disable-next-line global-require,import/no-dynamic-require\n                return require(id);\n            }\n\n            return await import(id);\n        } catch (e) {\n            /* istanbul ignore next */\n            if (\n                isObject(e) &&\n                hasStringProperty(e, 'code')\n            ) {\n                if (\n                    !options.withFilePrefix &&\n                    (\n                        e.code === 'ERR_UNSUPPORTED_ESM_URL_SCHEME' ||\n                        e.code === 'UNSUPPORTED_ESM_URL_SCHEME'\n                    )\n                ) {\n                    return this.load(data, {\n                        ...options,\n                        withFilePrefix: true,\n                    });\n                }\n\n                throw new BaseError({\n                    code: e.code,\n                    message: hasStringProperty(e, 'message') ? e.message : undefined,\n                    stack: hasStringProperty(e, 'stack') ? e.stack : undefined,\n                });\n            }\n\n            /* istanbul ignore next */\n            return handleException(e);\n        }\n    }\n\n    loadSync(\n        data: LocatorInfo | string,\n        options: ModuleLoadOptions = {},\n    ) : unknown {\n        const id = this.build(data, options);\n\n        try {\n            // eslint-disable-next-line global-require,import/no-dynamic-require\n            return require(id);\n        } catch (e) {\n            /* istanbul ignore next */\n            if (\n                isObject(e) &&\n                hasStringProperty(e, 'code')\n            ) {\n                throw new BaseError({\n                    code: e.code,\n                    message: hasStringProperty(e, 'message') ? e.message : undefined,\n                    stack: hasStringProperty(e, 'stack') ? e.stack : undefined,\n                });\n            }\n\n            return handleException(e);\n        }\n    }\n\n    private build(\n        data: LocatorInfo | string,\n        options: ModuleLoadOptions = {},\n    ) : string {\n        if (isLocatorInfo(data) || isFilePath(data)) {\n            if (typeof data !== 'string') {\n                data = buildFilePath(data);\n            }\n\n            if (options.withFilePrefix) {\n                data = pathToFileURL(data).href;\n            }\n        }\n\n        return data;\n    }\n}\n","/*\n * Copyright (c) 2022-2023.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport fs from 'node:fs';\nimport { buildFilePath } from '../../../locator';\nimport { handleException } from '../../../utils';\nimport type { Loader } from '../../type';\n\nexport class JSONLoader implements Loader {\n    async execute(input: string) {\n        const filePath = buildFilePath(input);\n\n        try {\n            const file = await fs.promises.readFile(filePath, { encoding: 'utf-8' });\n            return JSON.parse(file);\n        } catch (e) {\n            return handleException(e);\n        }\n    }\n\n    executeSync(input: string) {\n        const filePath = buildFilePath(input);\n\n        try {\n            const file = fs.readFileSync(filePath, { encoding: 'utf-8' });\n            return JSON.parse(file);\n        } catch (e) {\n            return handleException(e);\n        }\n    }\n}\n","/*\n * Copyright (c) 2022-2023.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport { parse } from 'yaml';\nimport fs from 'node:fs';\nimport { buildFilePath } from '../../../locator';\nimport { handleException } from '../../../utils';\nimport type { Loader } from '../../type';\n\nexport class YAMLLoader implements Loader {\n    async execute(input: string) {\n        const filePath = buildFilePath(input);\n\n        try {\n            const file = await fs.promises.readFile(filePath, { encoding: 'utf-8' });\n            return parse(file);\n        } catch (e) {\n            return handleException(e);\n        }\n    }\n\n    executeSync(input: string) {\n        const filePath = buildFilePath(input);\n\n        try {\n            const file = fs.readFileSync(filePath, { encoding: 'utf-8' });\n            return parse(file);\n        } catch (e) {\n            return handleException(e);\n        }\n    }\n}\n","/*\n * Copyright (c) 2023.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nexport enum LoaderId {\n    MODULE = 'module',\n    JSON = 'json',\n    CONF = 'conf',\n    YAML = 'yaml',\n}\n","/*\n * Copyright (c) 2023.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport path from 'node:path';\nimport { buildFilePath, pathToLocatorInfo } from '../locator';\nimport { isFilePath } from '../utils';\nimport { ConfLoader, JSONLoader, ModuleLoader } from './built-in';\nimport { YAMLLoader } from './built-in/yaml';\nimport { LoaderId } from './constants';\nimport type { Loader, Rule } from './type';\n\nexport class LoaderManager implements Loader {\n    protected loaders : Record<string, Loader>;\n\n    protected rules : Rule[];\n\n    constructor() {\n        this.loaders = {};\n        this.rules = [\n            {\n                test: ['.js', '.mjs', '.mts', '.cjs', '.cts', '.ts'],\n                loader: LoaderId.MODULE,\n            },\n            {\n                test: ['.conf'], loader: LoaderId.CONF,\n            },\n            {\n                test: ['.json'], loader: LoaderId.JSON,\n            },\n            {\n                test: ['.yml', '.yaml'], loader: LoaderId.YAML,\n            },\n        ];\n    }\n\n    register(rule: Rule) : void;\n\n    register(test: string[] | RegExp, loader: Loader) : void;\n\n    register(test: any, loader?: Loader) : void {\n        if (typeof loader !== 'undefined') {\n            this.rules.push({ test, loader });\n            return;\n        }\n\n        this.rules.push(test);\n    }\n\n    async execute(input: string) : Promise<any> {\n        const id = this.findLoader(input);\n        if (!id) {\n            const info = pathToLocatorInfo(input);\n            throw new Error(`No loader registered for extension: \"${info.extension}\"`);\n        }\n\n        const loader = this.resolve(id);\n        return loader.execute(input);\n    }\n\n    executeSync(input: string) : any {\n        const id = this.findLoader(input);\n        if (!id) {\n            const info = pathToLocatorInfo(input);\n            throw new Error(`No loader registered for extension: ${info.extension || 'unknown'}`);\n        }\n\n        const loader = this.resolve(id);\n        return loader.executeSync(input);\n    }\n\n    findLoader(input: string) : Loader | string | undefined {\n        if (!isFilePath(input)) {\n            return LoaderId.MODULE;\n        }\n\n        const info = pathToLocatorInfo(input);\n        for (let i = 0; i < this.rules.length; i++) {\n            const { test } = this.rules[i] as Rule;\n            if (Array.isArray(test)) {\n                if (\n                    info.extension &&\n                    test.indexOf(info.extension) !== -1\n                ) {\n                    return this.rules[i].loader;\n                }\n            } else if (test.test(buildFilePath(info))) {\n                return this.rules[i].loader;\n            }\n        }\n\n        return undefined;\n    }\n\n    /**\n     * Resolve loader by id.\n     *\n     * @param id\n     */\n    resolve(id: string | Loader) : Loader {\n        if (typeof id !== 'string') {\n            return id;\n        }\n\n        if (Object.prototype.hasOwnProperty.call(this.loaders, id)) {\n            return this.loaders[id] as Loader;\n        }\n\n        let loader : Loader | undefined;\n\n        // built-in\n        switch (id) {\n            case LoaderId.CONF: {\n                loader = new ConfLoader();\n                break;\n            }\n            case LoaderId.MODULE: {\n                loader = new ModuleLoader();\n                break;\n            }\n            case LoaderId.JSON: {\n                loader = new JSONLoader();\n                break;\n            }\n            case LoaderId.YAML: {\n                loader = new YAMLLoader();\n                break;\n            }\n            /* istanbul ignore next */\n            default: {\n                const pluginPath = this.normalizePath(id);\n                const moduleLoader = this.resolve(LoaderId.MODULE);\n                loader = moduleLoader.executeSync(pluginPath);\n\n                break;\n            }\n        }\n\n        if (typeof loader !== 'undefined') {\n            this.loaders[id] = loader;\n\n            return loader;\n        }\n\n        throw new Error(`The loader ${id} could not be resolved.`);\n    }\n\n    /* istanbul ignore next */\n    normalizePath(input: string) {\n        if (path.isAbsolute(input) || input.startsWith('./')) {\n            return input;\n        }\n\n        if (input.startsWith('module:')) {\n            return input.substring(0, 'module:'.length);\n        }\n\n        if (!input.startsWith('@')) {\n            return `@locter/${input}`;\n        }\n\n        return input;\n    }\n}\n","/*\n * Copyright (c) 2023.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport { LoaderManager } from './module';\n\nlet instance : LoaderManager;\nexport function useLoader() {\n    if (typeof instance !== 'undefined') {\n        return instance;\n    }\n\n    instance = new LoaderManager();\n\n    return instance;\n}\n","/*\n * Copyright (c) 2022.\n * Author Peter Placzek (tada5hi)\n * For the full copyright and license information,\n * view the LICENSE file that was distributed with this source code.\n */\n\nimport { buildFilePath } from '../locator';\nimport type { LocatorInfo } from '../locator';\nimport { useLoader } from './singleton';\nimport type { Loader, Rule } from './type';\n\nexport function registerLoader(rule: Rule) : void;\nexport function registerLoader(test: string[] | RegExp, loader: Loader) : void;\nexport function registerLoader(test: any, loader?: Loader) : void {\n    const manager = useLoader();\n    if (typeof loader !== 'undefined') {\n        manager.register(test, loader);\n\n        return;\n    }\n\n    manager.register(test);\n}\n\nexport async function load(input: LocatorInfo | string) : Promise<any> {\n    const manager = useLoader();\n    if (typeof input === 'string') {\n        return manager.execute(input);\n    }\n\n    return manager.execute(buildFilePath(input));\n}\n\nexport function loadSync(input: LocatorInfo | string) : any {\n    const manager = useLoader();\n    if (typeof input === 'string') {\n        return manager.executeSync(input);\n    }\n\n    return manager.executeSync(buildFilePath(input));\n}\n"],"names":["hasOwnProperty","obj","prop","Object","prototype","call","hasStringProperty","isObject","item","Array","isArray","isSafeObjectKey","key","handleException","e","Error","error","message","stack","getFileNameExtension","input","allowed","extension","path","extname","undefined","indexOf","removeFileNameExtension","extensions","substring","length","toArray","isFilePath","isJestRuntimeEnvironment","process","env","JEST_WORKER_ID","isTsNodeRuntimeEnvironment","Symbol","for","isTypeScriptError","diagnosticCodes","test","buildLocatorPatterns","pattern","buildLocatorOptions","options","paths","ignore","push","cwd","onlyFiles","onlyDirectories","pathToLocatorInfo","skipResolve","isAbsolute","resolve","info","parse","dir","split","join","sep","name","ext","isLocatorInfo","buildFilePath","buildFilePathWithoutExtension","locateMany","patterns","opts","items","i","j","files","fg","absolute","k","locate","element","shift","locateManySync","sync","locateSync","ConfLoader","execute","filePath","file","fs","promises","readFile","encoding","executeSync","readFileSync","contents","config","lines","match","value","destr","trim","endsWith","arrKey","slice","Math","max","concat","flat","unflatten","overwrite","isESModule","__esModule","toModuleRecord","data","default","output","create","toStringTag","descriptor","getOwnPropertyDescriptor","writable","configurable","enumerable","get","defineProperty","freeze","getModuleExport","filterFn","keys","ModuleLoader","load","SyntaxError","ReferenceError","loadSync","instance","id","build","require","withFilePrefix","code","BaseError","pathToFileURL","href","constructor","createJiti","JSONLoader","JSON","YAMLLoader","LoaderId","LoaderManager","register","loader","rules","findLoader","MODULE","loaders","CONF","YAML","pluginPath","normalizePath","moduleLoader","startsWith","useLoader","registerLoader","manager"],"mappings":"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"}